"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9933],{45347:function(e,n,a){var i,t;a.d(n,{$7:function(){return o}}),(t=i||(i={})).EVM="EVM",t.SVM="SVM";let d=e=>async n=>(await fetch("https://li.quest/v1/tokens?chains=".concat(n.join(","),"&chainTypes=").concat(e))).json(),o=d("EVM");d("SVM")},30519:function(e,n,a){a.d(n,{yG:function(){return D},yA:function(){return _},pn:function(){return G},ys:function(){return Q},Nq:function(){return z},gA:function(){return W},oq:function(){return j},e2:function(){return et},hQ:function(){return ed},ql:function(){return el}});var i,t,d,o,l,r,m,s,k=a(1165),u=a(37162),p=a(39902),c=a(28241),y=a(14422);let v="0x7d52b241c8d9704ab8acfc30bb008b10e125b71c",N=(0,u.L)({uri:"https://savings-graphigo.prd.latch.io/query",credentials:"same-origin"}),S=new p.f({cache:new c.h,link:(0,y.D)([N])});(i=l||(l={})).GtttDeposit="GTTT_DEPOSIT",i.GtttSpend="GTTT_SPEND",(t=r||(r={})).LoginTypeAppleId="LoginTypeAppleId",t.LoginTypeEmail="LoginTypeEmail",t.LoginTypeGoogle="LoginTypeGoogle",(d=m||(m={})).EmailLogin="EmailLogin",d.GoogleLogin="GoogleLogin",(o=s||(s={})).Read="read",o.Write="write";let g={"\n  fragment MyReward on MyReward {\n    name\n    yesterdayReward\n    totalReward\n    logo\n  }\n":{kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"MyReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"yesterdayReward"}},{kind:"Field",name:{kind:"Name",value:"totalReward"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}}]},"\n  fragment MyProtocolBalance on MyProtocolBalance {\n    address\n    protocolProxyChainId\n    protocolProxyAddr\n    balance\n    yesterdayProfit\n    totalProfit\n    beginTime\n    rewards {\n      ...MyReward\n    }\n  }\n":{kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"MyProtocolBalance"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyProtocolBalance"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyChainId"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyAddr"}},{kind:"Field",name:{kind:"Name",value:"balance"}},{kind:"Field",name:{kind:"Name",value:"yesterdayProfit"}},{kind:"Field",name:{kind:"Name",value:"totalProfit"}},{kind:"Field",name:{kind:"Name",value:"beginTime"}},{kind:"Field",name:{kind:"Name",value:"rewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MyReward"}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"MyReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"yesterdayReward"}},{kind:"Field",name:{kind:"Name",value:"totalReward"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}}]},"\n  fragment Token on Token {\n    chainId\n    addr\n    logo\n    symbol\n    decimals\n  }\n":{kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"Token"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Token"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"addr"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"symbol"}},{kind:"Field",name:{kind:"Name",value:"decimals"}}]}}]},"\n  fragment ProtocolReward on ProtocolReward {\n    name\n    logo\n  }\n":{kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}}]},"\n    fragment ProtocolInfo on ProtocolInfo {\n        address\n        name\n        chainId\n        tickerSymbol\n        token\n        tokenInfo {\n            ...Token\n        }\n        apy\n        description\n        logo\n        totalAmount\n        maxDepositAmount\n        boostApy\n        boostMaxDeposit\n        boostMinDeposit\n        protocolRewards {\n            ...ProtocolReward\n        }\n    }\n":{kind:"Document",definitions:[{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolInfo"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolInfo"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"tickerSymbol"}},{kind:"Field",name:{kind:"Name",value:"token"}},{kind:"Field",name:{kind:"Name",value:"tokenInfo"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Token"}}]}},{kind:"Field",name:{kind:"Name",value:"apy"}},{kind:"Field",name:{kind:"Name",value:"description"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"totalAmount"}},{kind:"Field",name:{kind:"Name",value:"maxDepositAmount"}},{kind:"Field",name:{kind:"Name",value:"boostApy"}},{kind:"Field",name:{kind:"Name",value:"boostMaxDeposit"}},{kind:"Field",name:{kind:"Name",value:"boostMinDeposit"}},{kind:"Field",name:{kind:"Name",value:"protocolRewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ProtocolReward"}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"Token"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Token"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"addr"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"symbol"}},{kind:"Field",name:{kind:"Name",value:"decimals"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}}]},"\n    mutation PublishSpendingIntent($req: PublishSpendingIntentRequest!) {\n        PublishSpendingIntent(req: $req) {\n            ret\n            errMsg\n            intentId\n            validUntil\n            validAfter\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"PublishSpendingIntent"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"req"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"PublishSpendingIntentRequest"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"PublishSpendingIntent"},arguments:[{kind:"Argument",name:{kind:"Name",value:"req"},value:{kind:"Variable",name:{kind:"Name",value:"req"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"ret"}},{kind:"Field",name:{kind:"Name",value:"errMsg"}},{kind:"Field",name:{kind:"Name",value:"intentId"}},{kind:"Field",name:{kind:"Name",value:"validUntil"}},{kind:"Field",name:{kind:"Name",value:"validAfter"}}]}}]}}]},"\n  mutation RequestUnstake($req: RequestUnstakeRequest!) {\n    RequestUnstake(req: $req) {\n      ret\n      fee\n      errMsg\n    }\n  }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"RequestUnstake"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"req"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"RequestUnstakeRequest"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"RequestUnstake"},arguments:[{kind:"Argument",name:{kind:"Name",value:"req"},value:{kind:"Variable",name:{kind:"Name",value:"req"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"ret"}},{kind:"Field",name:{kind:"Name",value:"fee"}},{kind:"Field",name:{kind:"Name",value:"errMsg"}}]}}]}}]},"\n  mutation Approve($input: ApproveInput!) {\n    Approve(input: $input)\n  }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"Approve"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"input"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ApproveInput"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"Approve"},arguments:[{kind:"Argument",name:{kind:"Name",value:"input"},value:{kind:"Variable",name:{kind:"Name",value:"input"}}}]}]}}]},"\n    query PreviewSpendingIntent($req: PreviewSpendingIntentRequest!) {\n        PreviewSpendingIntent(req: $req) {\n            ret\n            errMsg\n            chainId\n            token {\n                chainId\n                addr\n            }\n            tokenAmount\n            spendingTotalUSDValue\n            spendingILBalances {\n                protocolProxyChainId\n                protocolProxyAddr\n                tokenAmount\n                exchangeRate\n                protocolInfo {\n                    ...ProtocolInfo\n                }\n            }\n            validUntil\n            fee\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"PreviewSpendingIntent"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"req"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"PreviewSpendingIntentRequest"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"PreviewSpendingIntent"},arguments:[{kind:"Argument",name:{kind:"Name",value:"req"},value:{kind:"Variable",name:{kind:"Name",value:"req"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"ret"}},{kind:"Field",name:{kind:"Name",value:"errMsg"}},{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"token"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"addr"}}]}},{kind:"Field",name:{kind:"Name",value:"tokenAmount"}},{kind:"Field",name:{kind:"Name",value:"spendingTotalUSDValue"}},{kind:"Field",name:{kind:"Name",value:"spendingILBalances"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"protocolProxyChainId"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyAddr"}},{kind:"Field",name:{kind:"Name",value:"tokenAmount"}},{kind:"Field",name:{kind:"Name",value:"exchangeRate"}},{kind:"Field",name:{kind:"Name",value:"protocolInfo"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ProtocolInfo"}}]}}]}},{kind:"Field",name:{kind:"Name",value:"validUntil"}},{kind:"Field",name:{kind:"Name",value:"fee"}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"Token"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Token"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"addr"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"symbol"}},{kind:"Field",name:{kind:"Name",value:"decimals"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolInfo"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolInfo"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"tickerSymbol"}},{kind:"Field",name:{kind:"Name",value:"token"}},{kind:"Field",name:{kind:"Name",value:"tokenInfo"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Token"}}]}},{kind:"Field",name:{kind:"Name",value:"apy"}},{kind:"Field",name:{kind:"Name",value:"description"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"totalAmount"}},{kind:"Field",name:{kind:"Name",value:"maxDepositAmount"}},{kind:"Field",name:{kind:"Name",value:"boostApy"}},{kind:"Field",name:{kind:"Name",value:"boostMaxDeposit"}},{kind:"Field",name:{kind:"Name",value:"boostMinDeposit"}},{kind:"Field",name:{kind:"Name",value:"protocolRewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ProtocolReward"}}]}}]}}]},"\n    query SpendingUsdQuota($address:String!) {\n        SpendingUsdQuota(address: $address) {\n            addr\n            availableUsdAmount\n            frozenUsdAmount\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"SpendingUsdQuota"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"SpendingUsdQuota"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addr"}},{kind:"Field",name:{kind:"Name",value:"availableUsdAmount"}},{kind:"Field",name:{kind:"Name",value:"frozenUsdAmount"}}]}}]}}]},"\n    query GetTotalTvl {\n        GetTotalTvl\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetTotalTvl"},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"GetTotalTvl"}}]}}]},"\n    query GetMySmartSaving($address: String!) {\n        GetMySmartSaving(address: $address) {\n            apy\n            balance:usdAmount\n            drawdownQuota:usdIlAmount\n            yesterdayUsdProfit\n            totalUsdProfit\n            isBoosted\n            rewards {\n                ...MyReward\n            }\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetMySmartSaving"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"GetMySmartSaving"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"apy"}},{kind:"Field",alias:{kind:"Name",value:"balance"},name:{kind:"Name",value:"usdAmount"}},{kind:"Field",alias:{kind:"Name",value:"drawdownQuota"},name:{kind:"Name",value:"usdIlAmount"}},{kind:"Field",name:{kind:"Name",value:"yesterdayUsdProfit"}},{kind:"Field",name:{kind:"Name",value:"totalUsdProfit"}},{kind:"Field",name:{kind:"Name",value:"isBoosted"}},{kind:"Field",name:{kind:"Name",value:"rewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MyReward"}}]}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"MyReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"yesterdayReward"}},{kind:"Field",name:{kind:"Name",value:"totalReward"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}}]},"\n    query GetProtocols($address: String!,$onlyStaked: Boolean!) {\n        GetProtocols(address: $address,onlyStaked: $onlyStaked) {\n            address\n            name\n            chainId\n            tickerSymbol\n            token\n            apy\n            description\n            logo\n            totalAmount\n            maxDepositAmount\n            boostApy\n            boostMinDeposit\n            boostMaxDeposit\n            protocolRewards {\n                ...ProtocolReward\n            }\n            myProtocolBalance {\n                ...MyProtocolBalance\n            }\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetProtocols"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"onlyStaked"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"GetProtocols"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}},{kind:"Argument",name:{kind:"Name",value:"onlyStaked"},value:{kind:"Variable",name:{kind:"Name",value:"onlyStaked"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"tickerSymbol"}},{kind:"Field",name:{kind:"Name",value:"token"}},{kind:"Field",name:{kind:"Name",value:"apy"}},{kind:"Field",name:{kind:"Name",value:"description"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"totalAmount"}},{kind:"Field",name:{kind:"Name",value:"maxDepositAmount"}},{kind:"Field",name:{kind:"Name",value:"boostApy"}},{kind:"Field",name:{kind:"Name",value:"boostMinDeposit"}},{kind:"Field",name:{kind:"Name",value:"boostMaxDeposit"}},{kind:"Field",name:{kind:"Name",value:"protocolRewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ProtocolReward"}}]}},{kind:"Field",name:{kind:"Name",value:"myProtocolBalance"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MyProtocolBalance"}}]}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"MyReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"yesterdayReward"}},{kind:"Field",name:{kind:"Name",value:"totalReward"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"MyProtocolBalance"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyProtocolBalance"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyChainId"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyAddr"}},{kind:"Field",name:{kind:"Name",value:"balance"}},{kind:"Field",name:{kind:"Name",value:"yesterdayProfit"}},{kind:"Field",name:{kind:"Name",value:"totalProfit"}},{kind:"Field",name:{kind:"Name",value:"beginTime"}},{kind:"Field",name:{kind:"Name",value:"rewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MyReward"}}]}}]}}]},"\n    query GetBalanceSummaryByToken($address: String!) {\n        GetBalanceSummaryByToken(address: $address) {\n            token {\n               ...Token\n            }\n            amount\n            totalProfit\n            yesterdayProfit\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetBalanceSummaryByToken"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"GetBalanceSummaryByToken"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"token"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Token"}}]}},{kind:"Field",name:{kind:"Name",value:"amount"}},{kind:"Field",name:{kind:"Name",value:"totalProfit"}},{kind:"Field",name:{kind:"Name",value:"yesterdayProfit"}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"Token"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Token"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"addr"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"symbol"}},{kind:"Field",name:{kind:"Name",value:"decimals"}}]}}]},"\n    mutation SignStakeDeposit($chainId: Int!, $protocolProxyChainId: Int!, $protocolProxyAddr: String!, $token: String!) {\n        SignStakeDeposit(chainId: $chainId, protocolProxyChainId: $protocolProxyChainId, protocolProxyAddr: $protocolProxyAddr, token: $token) {\n            signature,\n            encodedData,\n            chainId,\n            protocolProxyChainId,\n            protocolProxyAddr,\n            exchangeRate,\n            validAfter,\n            validUntil,\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"mutation",name:{kind:"Name",value:"SignStakeDeposit"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"chainId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"protocolProxyChainId"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"protocolProxyAddr"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"token"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"SignStakeDeposit"},arguments:[{kind:"Argument",name:{kind:"Name",value:"chainId"},value:{kind:"Variable",name:{kind:"Name",value:"chainId"}}},{kind:"Argument",name:{kind:"Name",value:"protocolProxyChainId"},value:{kind:"Variable",name:{kind:"Name",value:"protocolProxyChainId"}}},{kind:"Argument",name:{kind:"Name",value:"protocolProxyAddr"},value:{kind:"Variable",name:{kind:"Name",value:"protocolProxyAddr"}}},{kind:"Argument",name:{kind:"Name",value:"token"},value:{kind:"Variable",name:{kind:"Name",value:"token"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"signature"}},{kind:"Field",name:{kind:"Name",value:"encodedData"}},{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyChainId"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyAddr"}},{kind:"Field",name:{kind:"Name",value:"exchangeRate"}},{kind:"Field",name:{kind:"Name",value:"validAfter"}},{kind:"Field",name:{kind:"Name",value:"validUntil"}}]}}]}}]},"\n    query GetIsStaked($address: String!) {\n        GetIsStaked(address: $address)\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetIsStaked"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"GetIsStaked"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}]}]}}]},"\n    query Allowance($req: AllowanceInput!) {\n        Allowance(req: $req) {\n            owner\n            spender\n            isApproved\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"Allowance"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"req"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"AllowanceInput"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"Allowance"},arguments:[{kind:"Argument",name:{kind:"Name",value:"req"},value:{kind:"Variable",name:{kind:"Name",value:"req"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"owner"}},{kind:"Field",name:{kind:"Name",value:"spender"}},{kind:"Field",name:{kind:"Name",value:"isApproved"}}]}}]}}]},"\n    query GetAddressNonce($address: String!) {\n        GetAddressNonce(address: $address)\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetAddressNonce"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"GetAddressNonce"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}]}]}}]},"\n    query GetUserBalances($address: String!,$protocolKeys: [ProtocolInput!]) {\n        GetUserBalances(address: $address,protocolKeys: $protocolKeys) {\n            realApy\n            isBoosted\n            balance {\n                ...MyProtocolBalance\n            }\n            protocol {\n                ...ProtocolInfo\n            }\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetUserBalances"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"protocolKeys"}},type:{kind:"ListType",type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"ProtocolInput"}}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"GetUserBalances"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}},{kind:"Argument",name:{kind:"Name",value:"protocolKeys"},value:{kind:"Variable",name:{kind:"Name",value:"protocolKeys"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"realApy"}},{kind:"Field",name:{kind:"Name",value:"isBoosted"}},{kind:"Field",name:{kind:"Name",value:"balance"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MyProtocolBalance"}}]}},{kind:"Field",name:{kind:"Name",value:"protocol"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ProtocolInfo"}}]}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"MyReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"yesterdayReward"}},{kind:"Field",name:{kind:"Name",value:"totalReward"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"Token"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Token"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"addr"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"symbol"}},{kind:"Field",name:{kind:"Name",value:"decimals"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"MyProtocolBalance"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyProtocolBalance"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyChainId"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyAddr"}},{kind:"Field",name:{kind:"Name",value:"balance"}},{kind:"Field",name:{kind:"Name",value:"yesterdayProfit"}},{kind:"Field",name:{kind:"Name",value:"totalProfit"}},{kind:"Field",name:{kind:"Name",value:"beginTime"}},{kind:"Field",name:{kind:"Name",value:"rewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MyReward"}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolInfo"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolInfo"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"tickerSymbol"}},{kind:"Field",name:{kind:"Name",value:"token"}},{kind:"Field",name:{kind:"Name",value:"tokenInfo"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Token"}}]}},{kind:"Field",name:{kind:"Name",value:"apy"}},{kind:"Field",name:{kind:"Name",value:"description"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"totalAmount"}},{kind:"Field",name:{kind:"Name",value:"maxDepositAmount"}},{kind:"Field",name:{kind:"Name",value:"boostApy"}},{kind:"Field",name:{kind:"Name",value:"boostMaxDeposit"}},{kind:"Field",name:{kind:"Name",value:"boostMinDeposit"}},{kind:"Field",name:{kind:"Name",value:"protocolRewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ProtocolReward"}}]}}]}}]},"\n    query GetProtocolMarkets($address: String!) {\n        GetProtocolMarkets(address: $address) {\n            realApy\n            isBoosted\n            balance {\n                ...MyProtocolBalance\n            }\n            protocol {\n                ...ProtocolInfo\n            }\n        }\n    }\n":{kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"GetProtocolMarkets"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"address"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"GetProtocolMarkets"},arguments:[{kind:"Argument",name:{kind:"Name",value:"address"},value:{kind:"Variable",name:{kind:"Name",value:"address"}}}],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"realApy"}},{kind:"Field",name:{kind:"Name",value:"isBoosted"}},{kind:"Field",name:{kind:"Name",value:"balance"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MyProtocolBalance"}}]}},{kind:"Field",name:{kind:"Name",value:"protocol"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ProtocolInfo"}}]}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"MyReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"yesterdayReward"}},{kind:"Field",name:{kind:"Name",value:"totalReward"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"Token"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"Token"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"addr"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"symbol"}},{kind:"Field",name:{kind:"Name",value:"decimals"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolReward"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolReward"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"logo"}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"MyProtocolBalance"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"MyProtocolBalance"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyChainId"}},{kind:"Field",name:{kind:"Name",value:"protocolProxyAddr"}},{kind:"Field",name:{kind:"Name",value:"balance"}},{kind:"Field",name:{kind:"Name",value:"yesterdayProfit"}},{kind:"Field",name:{kind:"Name",value:"totalProfit"}},{kind:"Field",name:{kind:"Name",value:"beginTime"}},{kind:"Field",name:{kind:"Name",value:"rewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"MyReward"}}]}}]}},{kind:"FragmentDefinition",name:{kind:"Name",value:"ProtocolInfo"},typeCondition:{kind:"NamedType",name:{kind:"Name",value:"ProtocolInfo"}},selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"address"}},{kind:"Field",name:{kind:"Name",value:"name"}},{kind:"Field",name:{kind:"Name",value:"chainId"}},{kind:"Field",name:{kind:"Name",value:"tickerSymbol"}},{kind:"Field",name:{kind:"Name",value:"token"}},{kind:"Field",name:{kind:"Name",value:"tokenInfo"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"Token"}}]}},{kind:"Field",name:{kind:"Name",value:"apy"}},{kind:"Field",name:{kind:"Name",value:"description"}},{kind:"Field",name:{kind:"Name",value:"logo"}},{kind:"Field",name:{kind:"Name",value:"totalAmount"}},{kind:"Field",name:{kind:"Name",value:"maxDepositAmount"}},{kind:"Field",name:{kind:"Name",value:"boostApy"}},{kind:"Field",name:{kind:"Name",value:"boostMaxDeposit"}},{kind:"Field",name:{kind:"Name",value:"boostMinDeposit"}},{kind:"Field",name:{kind:"Name",value:"protocolRewards"},selectionSet:{kind:"SelectionSet",selections:[{kind:"FragmentSpread",name:{kind:"Name",value:"ProtocolReward"}}]}}]}}]}};function F(e){var n;return null!==(n=g[e])&&void 0!==n?n:{}}F("\n    query GetTotalTvl {\n        GetTotalTvl\n    }\n");let b=F("\n    query GetMySmartSaving($address: String!) {\n        GetMySmartSaving(address: $address) {\n            apy\n            balance:usdAmount\n            drawdownQuota:usdIlAmount\n            yesterdayUsdProfit\n            totalUsdProfit\n            isBoosted\n            rewards {\n                ...MyReward\n            }\n        }\n    }\n");F("\n    query GetProtocols($address: String!,$onlyStaked: Boolean!) {\n        GetProtocols(address: $address,onlyStaked: $onlyStaked) {\n            address\n            name\n            chainId\n            tickerSymbol\n            token\n            apy\n            description\n            logo\n            totalAmount\n            maxDepositAmount\n            boostApy\n            boostMinDeposit\n            boostMaxDeposit\n            protocolRewards {\n                ...ProtocolReward\n            }\n            myProtocolBalance {\n                ...MyProtocolBalance\n            }\n        }\n    }\n");let f=F("\n    query GetBalanceSummaryByToken($address: String!) {\n        GetBalanceSummaryByToken(address: $address) {\n            token {\n               ...Token\n            }\n            amount\n            totalProfit\n            yesterdayProfit\n        }\n    }\n"),T=F("\n    mutation SignStakeDeposit($chainId: Int!, $protocolProxyChainId: Int!, $protocolProxyAddr: String!, $token: String!) {\n        SignStakeDeposit(chainId: $chainId, protocolProxyChainId: $protocolProxyChainId, protocolProxyAddr: $protocolProxyAddr, token: $token) {\n            signature,\n            encodedData,\n            chainId,\n            protocolProxyChainId,\n            protocolProxyAddr,\n            exchangeRate,\n            validAfter,\n            validUntil,\n        }\n    }\n"),I=F("\n    query GetIsStaked($address: String!) {\n        GetIsStaked(address: $address)\n    }\n"),P=F("\n    query Allowance($req: AllowanceInput!) {\n        Allowance(req: $req) {\n            owner\n            spender\n            isApproved\n        }\n    }\n"),w=F("\n    query GetAddressNonce($address: String!) {\n        GetAddressNonce(address: $address)\n    }\n"),h=F("\n    query GetUserBalances($address: String!,$protocolKeys: [ProtocolInput!]) {\n        GetUserBalances(address: $address,protocolKeys: $protocolKeys) {\n            realApy\n            isBoosted\n            balance {\n                ...MyProtocolBalance\n            }\n            protocol {\n                ...ProtocolInfo\n            }\n        }\n    }\n"),A=F("\n    query GetProtocolMarkets($address: String!) {\n        GetProtocolMarkets(address: $address) {\n            realApy\n            isBoosted\n            balance {\n                ...MyProtocolBalance\n            }\n            protocol {\n                ...ProtocolInfo\n            }\n        }\n    }\n");var D=function(e,n){var a;let{data:i,loading:t,refetch:d}=(0,k.a)(P,{variables:n?{req:{items:[{spender:e,owner:n}]}}:void 0,client:S,skip:!n,fetchPolicy:"network-only"});return{data:null!==(a=null==i?void 0:i.Allowance)&&void 0!==a?a:[],loading:t,refetch:d}},x=a(10608),M=a(4273),R=a(51705);let q=F("\n  mutation RequestUnstake($req: RequestUnstakeRequest!) {\n    RequestUnstake(req: $req) {\n      ret\n      fee\n      errMsg\n    }\n  }\n"),C=F("\n  mutation Approve($input: ApproveInput!) {\n    Approve(input: $input)\n  }\n");var $=a(47319),V=a(71923);let U=e=>{let n=new Uint8Array(e);return crypto.getRandomValues(n),(0,V.NC)(n)},B={Approve:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"timestamp",type:"uint256"},{name:"nonce",type:"uint256"}]};var _=function(e){let{signTypedDataAsync:n,isPending:a}=(0,x.useSignTypedData)({config:e}),[i,{loading:t}]=(0,M.t)(w,{fetchPolicy:"network-only",client:S}),[d,{loading:o}]=(0,R.D)(C,{client:S});return{approve:async(e,a,t)=>{var o;if(!e||!a)return;let{data:l}=await i({variables:{address:e}});if(!l)throw Error("Failed to get nonce");let r=U(32),m=Math.floor(Date.now()/1e3),s=l.GetAddressNonce+1,k=await n({account:e,types:B,domain:{name:"savings.latch.io",version:"1.0",chainId:t,verifyingContract:$.D,salt:r},message:{owner:e,spender:a,timestamp:BigInt(m),nonce:BigInt(s)},primaryType:"Approve"}),{data:u}=await d({variables:{input:{owner:e,spender:a,chainId:t,timestamp:m,salt:r,nonce:s,signature:k}}});return null!==(o=null==u?void 0:u.Approve)&&void 0!==o&&o},loading:a||o||t}},G=function(e){let{data:n,error:a,loading:i}=(0,k.a)(f,{variables:{address:e},client:S,skip:!e,fetchPolicy:"network-only"});return{data:null==n?void 0:n.GetBalanceSummaryByToken,error:a,loading:i}},E=a(74935);let O=F("\n    mutation PublishSpendingIntent($req: PublishSpendingIntentRequest!) {\n        PublishSpendingIntent(req: $req) {\n            ret\n            errMsg\n            intentId\n            validUntil\n            validAfter\n        }\n    }\n"),L=F("\n    query PreviewSpendingIntent($req: PreviewSpendingIntentRequest!) {\n        PreviewSpendingIntent(req: $req) {\n            ret\n            errMsg\n            chainId\n            token {\n                chainId\n                addr\n            }\n            tokenAmount\n            spendingTotalUSDValue\n            spendingILBalances {\n                protocolProxyChainId\n                protocolProxyAddr\n                tokenAmount\n                exchangeRate\n                protocolInfo {\n                    ...ProtocolInfo\n                }\n            }\n            validUntil\n            fee\n        }\n    }\n");F("\n    query SpendingUsdQuota($address:String!) {\n        SpendingUsdQuota(address: $address) {\n            addr\n            availableUsdAmount\n            frozenUsdAmount\n        }\n    }\n");let K={ILBalance:[{name:"protocolProxyChainId",type:"uint256"},{name:"protocolProxyAddr",type:"address"},{name:"tokenAmount",type:"uint256"},{name:"exchangeRate",type:"uint256"}],SpendingIntent:[{name:"receiver",type:"address"},{name:"wantedTokenChainId",type:"uint256"},{name:"wantedTokenAddress",type:"address"},{name:"wantedTokenAmount",type:"uint256"},{name:"expectedSpendingTotalUSDValue",type:"uint256"},{name:"spendingILBalances",type:"ILBalance[]"},{name:"maxSlippage",type:"uint256"}]};var Q=function(e,n,a,i){let t=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5,{signTypedDataAsync:d,isPending:o}=(0,x.useSignTypedData)({config:e}),{data:l,loading:r,error:m}=(0,k.a)(L,{variables:{req:{chainId:a.chainId,receiver:n,token:{chainId:a.chainId,addr:(0,E.U)(a.id)?a.id:$.D},tokenAmount:null==i?void 0:i.receiveAmount,spendingTotalUSDValue:null==i?void 0:i.spendAmount,maxSlippage:100*t}},fetchPolicy:"network-only",client:S,skip:!n||!a||!Number(null==i?void 0:i.receiveAmount)&&!Number(null==i?void 0:i.spendAmount)}),[s,{data:u,loading:p,error:c}]=(0,R.D)(O,{client:S}),y=async(e,a)=>{if(!e||!n||!l||!a)return;let o=U(32),r=(null==i?void 0:i.spendAmount)!==void 0,m={name:"savings.latch.io",version:"1.0",chainId:a,verifyingContract:$.D,salt:o},k=e.spendingILBalances.map(e=>({protocolProxyChainId:e.protocolProxyChainId,protocolProxyAddr:e.protocolProxyAddr,tokenAmount:e.tokenAmount,exchangeRate:e.exchangeRate})),u=100*t,p={receiver:n,wantedTokenChainId:e.token.chainId,wantedTokenAddress:e.token.addr,wantedTokenAmount:r?0:e.tokenAmount,expectedSpendingTotalUSDValue:r?e.spendingTotalUSDValue:0,maxSlippage:u,spendingILBalances:e.spendingILBalances},c=await d({account:n,domain:m,types:K,message:p,primaryType:"SpendingIntent"});await s({variables:{req:{addr:n,chainId:a,receiver:n,token:{chainId:e.token.chainId,addr:e.token.addr},tokenAmount:r?"0":e.tokenAmount,spendingTotalUSDValue:r?e.spendingTotalUSDValue:"0",spendingILBalances:k,maxSlippage:u,salt:o,signature:c}}})};return{previewData:null==l?void 0:l.PreviewSpendingIntent,isPreviewLoading:r,previewErrorMsg:(null==m?void 0:m.message)||(null==l?void 0:l.PreviewSpendingIntent.errMsg),drawdown:y,isDrawdownLoading:o||p}},z=function(e){var n;let{data:a,loading:i,refetch:t}=(0,k.a)(I,{variables:{address:e},skip:!e,client:S,fetchPolicy:"network-only"});return{data:null!==(n=null==a?void 0:a.GetIsStaked)&&void 0!==n?n:void 0,loading:i,refetch:t}},W=function(e){let{data:n,loading:a,refetch:i}=(0,k.a)(b,{client:S,variables:{address:e},skip:!e,fetchPolicy:"cache-and-network"});return{data:null==n?void 0:n.GetMySmartSaving,loading:a,refetch:i}},j=function(e){let{data:n,loading:a,refetch:i}=(0,k.a)(h,{variables:{address:e},skip:!e,client:S,fetchPolicy:"cache-and-network"});return{data:null==n?void 0:n.GetUserBalances,loading:a,refetch:i}},J=a(24917),H=a(80945),X=a(17495),Y=a(66752),Z=a(35893),ee=a(32283),en=a(35293);let ea=[{inputs:[{internalType:"address",name:"target",type:"address"}],name:"AddressEmptyCode",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"AddressInsufficientBalance",type:"error"},{inputs:[],name:"ECDSAInvalidSignature",type:"error"},{inputs:[{internalType:"uint256",name:"length",type:"uint256"}],name:"ECDSAInvalidSignatureLength",type:"error"},{inputs:[{internalType:"bytes32",name:"s",type:"bytes32"}],name:"ECDSAInvalidSignatureS",type:"error"},{inputs:[{internalType:"address",name:"implementation",type:"address"}],name:"ERC1967InvalidImplementation",type:"error"},{inputs:[],name:"ERC1967NonPayable",type:"error"},{inputs:[],name:"FailedInnerCall",type:"error"},{inputs:[],name:"InvalidInitialization",type:"error"},{inputs:[],name:"NotInitializing",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[{internalType:"address",name:"token",type:"address"}],name:"SafeERC20FailedOperation",type:"error"},{inputs:[],name:"UUPSUnauthorizedCallContext",type:"error"},{inputs:[{internalType:"bytes32",name:"slot",type:"bytes32"}],name:"UUPSUnsupportedProxiableUUID",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"_token",type:"address"},{indexed:!1,internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{indexed:!1,internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"AllowedTokenAddedToProtocol",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"_token",type:"address"},{indexed:!1,internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{indexed:!1,internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"AllowedTokenRemovedFromProtocol",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint64",name:"version",type:"uint64"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_signer",type:"address"}],name:"SignerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"implementation",type:"address"}],name:"Upgraded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_from",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!0,internalType:"address",name:"_token",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_exchangeRate",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{indexed:!1,internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"VaultDeposited",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"_from",type:"address"},{indexed:!0,internalType:"address",name:"_to",type:"address"},{indexed:!0,internalType:"address",name:"_token",type:"address"},{indexed:!1,internalType:"uint256",name:"_amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_targetAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{indexed:!1,internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"VaultWithdrawn",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"_withdrawer",type:"address"},{indexed:!1,internalType:"bool",name:"_enabled",type:"bool"}],name:"WithdrawerChanged",type:"event"},{inputs:[],name:"UPGRADE_INTERFACE_VERSION",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"accDepositAmounts",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"addAllowedTokenToProtocol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"allowTokenToProtocols",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"}],name:"depositCaps",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"",type:"address"}],name:"depositPools",outputs:[{internalType:"uint256",name:"depositAmount",type:"uint256"},{internalType:"uint256",name:"targetAmount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"_enabled",type:"bool"}],name:"enableDepositCap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"getProtocolAllowedTokens",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"getProtocolKey",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"_owner",type:"address"},{internalType:"address",name:"_signer",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"isDepositCapEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"proxiableUUID",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"remainingDepositCap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"removeAllowedTokenFromProtocol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"}],name:"rescueWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{internalType:"address",name:"_protocolProxyAddr",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"}],name:"setDepositCap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_signer",type:"address"}],name:"setSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_withdrawer",type:"address"},{internalType:"bool",name:"_enabled",type:"bool"}],name:"setWithdrawer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"signer",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newImplementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"upgradeToAndCall",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_amount",type:"uint256"},{internalType:"bytes",name:"_encodedData",type:"bytes"},{internalType:"bytes",name:"_signature",type:"bytes"}],name:"vaultDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"_token",type:"address"},{internalType:"address",name:"_to",type:"address"},{internalType:"uint256",name:"_protocolProxyChainId",type:"uint256"},{internalType:"address",name:"_protocolProxyAddr",type:"address"}],name:"vaultWithdraw",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"withdrawers",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"}];var ei=[{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"",type:"address"},{name:"",type:"address"}],name:"allowed",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"amount",type:"uint256"}],name:"redeem",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"remaining",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}],et=function(e,n,a,i,t){let[d,o]=(0,J.useState)(!1),[l,r]=(0,J.useState)(),{data:m,refetch:s}=(0,Z.useReadContract)({config:e,abi:ea,address:v,functionName:"remainingDepositCap",chainId:null==t?void 0:t.chainId,args:[BigInt(n.protocol.chainId),n.protocol.address],query:{enabled:!!t}}),k=(0,J.useMemo)(()=>{var e;return Number((0,H.b)(m||0n,null!==(e=n.protocol.tokenInfo.decimals)&&void 0!==e?e:18))},[m]);(0,J.useEffect)(()=>{t?r(((0,E.U)(t.id),200000n)):r(0n)},[null==t?void 0:t.id]);let[u,{loading:p}]=(0,R.D)(T,{client:S,variables:t&&n.protocol?{chainId:t.chainId,protocolProxyChainId:n.protocol.chainId,protocolProxyAddr:n.protocol.address,token:(0,E.U)(t.id)?t.id:$.D}:void 0}),{refetch:c}=(0,Z.useReadContract)({config:e,abi:X.Wo,address:null==t?void 0:t.id,functionName:"allowance",args:[i,v],chainId:null==t?void 0:t.chainId,query:{enabled:!!t&&!!i}});return{gas:l,stake:async()=>{if(!t||!i||!a)return"";o(!0);try{var d,l;let o=await u(),r=null===(d=o.data)||void 0===d?void 0:d.SignStakeDeposit;if(!r)throw Error("sign stake data fail");let{data:m=0n}=await s();if(a*BigInt(null!==(l=n.protocol.tokenInfo.decimals)&&void 0!==l?l:0)*BigInt(r.exchangeRate)/BigInt(10**t.decimals)/BigInt(1e18)>m)throw Error("exceed maximum deposit amount");let k=1===t.chainId?10:0,p=(0,E.U)(t.id),y=1===t.chainId&&"0xdac17f958d2ee523a2206206994597c13d831ec7"===t.id.toLocaleLowerCase();if(p){let{data:n}=await c();if(!n||n<a){if(y&&void 0!==n&&n>0n){let n=await writeContractAsync({abi:ei,functionName:"approve",address:t.id,chainId:t.chainId,args:[v,0n]});await (0,Y.J)(async()=>{await (0,ee.e)(e,{hash:n,chainId:t.chainId,timeout:2e4})},{delay:2e3,retryCount:k})}let i=await (0,en.n)(e,{abi:y?ei:X.Wo,functionName:"approve",address:t.id,chainId:t.chainId,args:[v,a]});await (0,Y.J)(async()=>{await (0,ee.e)(e,{hash:i,chainId:t.chainId,timeout:2e4})},{delay:2e3,retryCount:k})}}return await (0,en.n)(e,{abi:ea,functionName:"vaultDeposit",address:v,chainId:t.chainId,args:[i,a,r.encodedData,r.signature],value:p?void 0:a})}finally{o(!1)}},isStakeLoading:d,remainingCap:k}},ed=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",{data:n,loading:a,refetch:i}=(0,k.a)(A,{variables:{address:e},client:S,fetchPolicy:"cache-and-network"});return{data:null==n?void 0:n.GetProtocolMarkets,loading:a,refetch:i}};let eo={Unstake:[{name:"protocolProxyChainId",type:"uint256"},{name:"protocolProxyAddr",type:"address"},{name:"unstakeTokenAmount",type:"uint256"},{name:"toChainId",type:"uint256"},{name:"validUntil",type:"uint256"}]};var el=function(e){let[n,{loading:a}]=(0,R.D)(q,{client:S}),{signTypedDataAsync:i,isPending:t}=(0,x.useSignTypedData)({config:e});return{isLoading:a||t,unStake:async(e,a,t)=>{let d=U(32),o=Date.now()+3e5,l={name:"savings.latch.io",version:"1.0",chainId:a.protocol.chainId,verifyingContract:$.D,salt:d},r={protocolProxyChainId:a.protocol.chainId,protocolProxyAddr:a.protocol.address,unstakeTokenAmount:t,toChainId:a.protocol.chainId,validUntil:o},m=await i({domain:l,types:eo,message:r,account:e,primaryType:"Unstake"}),{data:s}=await n({variables:{req:{chainId:a.protocol.chainId,addr:e,protocolProxyChainId:a.protocol.chainId,protocolProxyAddr:a.protocol.address,unstakeTokenAmount:t,toChainId:a.protocol.chainId,validUntil:o,salt:d,signature:m}}});if(s&&0!==s.RequestUnstake.ret)throw Error(s.RequestUnstake.errMsg);return s}}}}}]);